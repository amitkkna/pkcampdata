// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Campaign {
  id             String   @id @default(cuid())
  name           String
  clientName     String
  startDate      DateTime
  endDate        DateTime
  description    String?
  targetAudience String?
  budget         Decimal?
  objectives     String?
  notes          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  visits         Visit[]
  folders        Folder[]

  @@map("campaigns")
}

model Folder {
  id             String   @id @default(cuid())
  name           String   // e.g., "Bemetara"
  location       String   // Location name for photo naming
  campaignId     String
  campaign       Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  photos         FolderPhoto[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("folders")
}

model FolderPhoto {
  id               String   @id @default(cuid())
  filename         String   // Auto-generated: Location-Campaign-Date format
  originalName     String   // Original uploaded filename
  photoUrl         String   // Supabase Storage URL
  uploadDate       DateTime @default(now())
  folderId         String
  folder           Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("folder_photos")
}

model Visit {
  id               String   @id @default(cuid())
  date             DateTime
  location         String
  notes            String?
  // Store Supabase Storage URLs instead of file paths
  photoUrl1        String?
  photoUrl2        String?
  photoUrl3        String?
  photoUrl4        String?
  // Store original filenames for reference
  originalFilename1 String?
  originalFilename2 String?
  originalFilename3 String?
  originalFilename4 String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  campaignId       String
  campaign         Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)

  @@map("visits")
}
